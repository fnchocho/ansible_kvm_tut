---
- name: Configure  nfs_client    
  hosts: rocky9
  become: true
  become_user: root
  tasks:
    - name: Install nfs packages
      include_tasks: install_package.yml
      vars:
        package_name: "{{ (nfs-utils,autofs) }}"
      when: ansible_distribution != "Ubuntu"

    - name: Install nfs packages
      include_tasks: install_package.yml
      vars:
        package_name: "{{ (nfs-common,autofs) }}"
      when: ansible_distribution == "Ubuntu"

    - name: Uncomment domian name
      ansible.builtin.lineinfile:
        path: /etc/idmapd.conf
        regexp: '^Domain='
        line: Domain = fncho.world
      tags: nfs,autofs

    - name: Add auto.master
      ansible.builtin.lineinfile:
        path: /etc/auto.master
        line: "/-    /etc/auto.mount"
        state: present
      tags: nfs,autofs

      # set boolean with [failed_when],
      # create [auto.mount] if result of boolean is [1]
    - name: auto.mount file exists or not
      shell: test -f /etc/auto.mount
      ignore_errors: true
      register: file_exists
      failed_when: file_exists.rc not in [0, 1]
     
    - name: put auto.mount
      shell: echo "auto.mount" > /etc/auto.mount
      when: file_exists.rc == 1

    - name: Add auto.mount
      ansible.builtin.lineinfile:
        path: /etc/auto.mount
        line: "/mnt -fstype=nfs,rw  192.168.122.94:/home/nfsshare"
        state: present
      tags: nfs,autofs

    - name: Append nfs mount to become automatic
      ansible.builtin.lineinfile:
        path:  /etc/fstab
        line: "192.168.122.94:/home/nfsshare /mnt nfs defaults  0 0"
        state: present
      notify: restart_autofs
      tags: autofs,nfs

    - name: Start "{{ service_name }}"
      include_tasks: start_service.yml
      vars:
        service_name: "{{ autofs }}"


